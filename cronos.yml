x-logging: &logging
  logging:
    driver: json-file
    options:
      max-size: 100m
      max-file: "3"
      tag: '{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}'

services:
  cronos:
    build:
      context: ./cronos
      dockerfile: Dockerfile.source
      args:
        - DAEMON_VERSION=${CRONOS_NODE_VERSION}
        - USER=cronos
    image: cronos:local
    pull_policy: never
    user: cronos
    restart: unless-stopped
    stop_grace_period: 5m
    environment:
      - DAEMON_VERSION=${CRONOS_NODE_VERSION}
      - EXTRA_FLAGS=${EXTRA_FLAGS:-}
      - NETWORK=${NETWORK}
      - MONIKER=${MONIKER}
      - CL_GRPC_PORT=${CL_GRPC_PORT:-9090}
      - CL_P2P_PORT=${CL_P2P_PORT:-26656}
      - CL_RPC_PORT=${CL_RPC_PORT:-26657}
      - RPC_PORT=${RPC_PORT:-8545}
      - WS_PORT=${WS_PORT:-8546}
      - SNAPSHOT=${SNAPSHOT}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - MIN_GAS_PRICE=${MIN_GAS_PRICE:-0.08}
    ports:
      - ${CL_P2P_PORT:-26656}:${CL_P2P_PORT:-26656}/tcp
      - ${CL_RPC_PORT:-26657}:${CL_RPC_PORT:-26657}/tcp
    <<: *logging
    volumes:
      - consensus-data:/cosmos
    entrypoint:
      - docker-entrypoint.sh
      - cronosd
      - start
      - --home
      - /cosmos
      - --chain-id
      - $NETWORK
      - --log_format
      - json
    labels:
        - traefik.enable=true
        - traefik.http.routers.${RPC_HOST}.service=${RPC_HOST}
        - traefik.http.routers.${RPC_HOST}.entrypoints=websecure
        - traefik.http.routers.${RPC_HOST}.rule=Host(`${RPC_HOST}.${DOMAIN}`)
        - traefik.http.routers.${RPC_HOST}.tls.certresolver=letsencrypt
        - traefik.http.routers.${RPC_HOST}lb.service=${RPC_HOST}
        - traefik.http.routers.${RPC_HOST}lb.entrypoints=websecure
        - traefik.http.routers.${RPC_HOST}lb.rule=Host(`${RPC_LB}.${DOMAIN}`)
        - traefik.http.routers.${RPC_HOST}lb.tls.certresolver=letsencrypt
        - traefik.http.services.${RPC_HOST}.loadbalancer.server.port=${RPC_PORT}
        - traefik.http.routers.${WS_HOST:-cronosws}.service=${WS_HOST:-cronosws}
        - traefik.http.routers.${WS_HOST:-cronosws}.entrypoints=websecure
        - traefik.http.routers.${WS_HOST:-cronosws}.rule=Host(`${WS_HOST:-cronosws}.${DOMAIN}`)
        - traefik.http.routers.${WS_HOST:-cronosws}.tls.certresolver=letsencrypt
        - traefik.http.routers.${WS_HOST:-cronosws}lb.service=${WS_HOST:-cronosws}
        - traefik.http.routers.${WS_HOST:-cronosws}lb.entrypoints=websecure
        - traefik.http.routers.${WS_HOST:-cronosws}lb.rule=Host(`${WS_LB:-cronosws-lb}.${DOMAIN}`)
        - traefik.http.routers.${WS_HOST:-cronosws}lb.tls.certresolver=letsencrypt
        - traefik.http.services.${WS_HOST:-cronosws}.loadbalancer.server.port=${WS_PORT:-8546}
        - metrics.scrape=true
        - metrics.path=/metrics
        - metrics.port=26660
        - metrics.instance=cronos
        - metrics.network=${NETWORK}

volumes:
  consensus-data: